[{"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\index.js":"1","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\App.js":"2","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\layout\\ResponsiveDrawer.jsx":"3","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Home.jsx":"4","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Maintenance.jsx":"5","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\OnlineListWrapper.jsx":"6","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\OnlineList.jsx":"7","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Login.jsx":"8","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Logout.jsx":"9","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\SignUp.jsx":"10","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\auth\\authContext.js":"11","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\alert\\alertContext.js":"12","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\auth\\AuthState.js":"13","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\alert\\AlertState.js":"14","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\auth\\authReducer.js":"15","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\alert\\alertReducer.js":"16","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\types.js":"17","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\utils\\setAuthToken.js":"18","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\PlayGame.jsx":"19","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomCreateModal.jsx":"20","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomSearchHeader.jsx":"21","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomListView.jsx":"22","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomJoinModal.jsx":"23","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Display\\Popups.jsx":"24","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Alert.jsx":"25","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Room.jsx":"26","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Chat\\Chat.jsx":"27","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\InfoBar\\InfoBar.jsx":"28","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Messages\\Messages.jsx":"29","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Input\\Input.jsx":"30","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Messages\\Message\\Message.jsx":"31","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\index.jsx":"32","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\SettingGame\\index.jsx":"33","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\Controller\\index.jsx":"34","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\ListPlayer\\index.jsx":"35","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\GameInfo\\index.jsx":"36"},{"size":221,"mtime":1612107971333,"results":"37","hashOfConfig":"38"},{"size":2209,"mtime":1614930611686,"results":"39","hashOfConfig":"38"},{"size":8542,"mtime":1614931659480,"results":"40","hashOfConfig":"38"},{"size":535,"mtime":1614932023400,"results":"41","hashOfConfig":"38"},{"size":818,"mtime":1612187841499,"results":"42","hashOfConfig":"38"},{"size":1793,"mtime":1616683600665,"results":"43","hashOfConfig":"38"},{"size":1891,"mtime":1614850538810,"results":"44","hashOfConfig":"38"},{"size":5774,"mtime":1616918471975,"results":"45","hashOfConfig":"38"},{"size":1040,"mtime":1616917563855,"results":"46","hashOfConfig":"38"},{"size":5955,"mtime":1614931716393,"results":"47","hashOfConfig":"38"},{"size":107,"mtime":1612165751965,"results":"48","hashOfConfig":"38"},{"size":109,"mtime":1612165751958,"results":"49","hashOfConfig":"38"},{"size":3461,"mtime":1614508434387,"results":"50","hashOfConfig":"38"},{"size":837,"mtime":1612165751945,"results":"51","hashOfConfig":"38"},{"size":1093,"mtime":1612165751974,"results":"52","hashOfConfig":"38"},{"size":344,"mtime":1612165751960,"results":"53","hashOfConfig":"38"},{"size":436,"mtime":1612165751975,"results":"54","hashOfConfig":"38"},{"size":253,"mtime":1612166873715,"results":"55","hashOfConfig":"38"},{"size":5358,"mtime":1616741648881,"results":"56","hashOfConfig":"38"},{"size":4150,"mtime":1616742817689,"results":"57","hashOfConfig":"38"},{"size":1204,"mtime":1612187853300,"results":"58","hashOfConfig":"38"},{"size":6923,"mtime":1616728219059,"results":"59","hashOfConfig":"38"},{"size":2501,"mtime":1616734336965,"results":"60","hashOfConfig":"38"},{"size":1789,"mtime":1612188021945,"results":"61","hashOfConfig":"38"},{"size":405,"mtime":1612187844388,"results":"62","hashOfConfig":"38"},{"size":4046,"mtime":1617028726971,"results":"63","hashOfConfig":"38"},{"size":1320,"mtime":1614865693640,"results":"64","hashOfConfig":"38"},{"size":552,"mtime":1614868007456,"results":"65","hashOfConfig":"38"},{"size":398,"mtime":1614863383005,"results":"66","hashOfConfig":"38"},{"size":651,"mtime":1614863382973,"results":"67","hashOfConfig":"38"},{"size":1130,"mtime":1614863382991,"results":"68","hashOfConfig":"38"},{"size":0,"mtime":1616745367576,"results":"69","hashOfConfig":"38"},{"size":5639,"mtime":1617029476953,"results":"70","hashOfConfig":"38"},{"size":2656,"mtime":1617029373995,"results":"71","hashOfConfig":"38"},{"size":2528,"mtime":1617011320393,"results":"72","hashOfConfig":"38"},{"size":3433,"mtime":1617007497821,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"ig53pt",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\index.js",[],["155","156"],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\App.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\layout\\ResponsiveDrawer.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Home.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Maintenance.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\OnlineListWrapper.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\OnlineList.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Login.jsx",["157"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport AlertContext from \"../context/alert/alertContext\";\r\n\r\nimport OnlineListWrapper from \"../components/OnlineListWrapper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#004c9e\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    background: \"#004c9e\",\r\n    color: \"#fff\",\r\n    margin: theme.spacing(3, 0, 2),\r\n    \"&:hover\": {\r\n      background: \"#004c9edd\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Login({ history }) {\r\n  const classes = useStyles();\r\n\r\n  // Use auth context\r\n  const authContext = useContext(AuthContext);\r\n  const {\r\n    login,\r\n    error,\r\n    isAuthenticated,\r\n    loadUser,\r\n    user,\r\n  } = authContext;\r\n\r\n  // Use alert context\r\n  const alertContext = useContext(AlertContext);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { alerts, setAlert } = alertContext;\r\n  const [message, setMessage] = useState({ open: false, text: \"\" });\r\n\r\n  // Init form data\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n\r\n  // Get form data\r\n  const { username, password } = formData;\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n\r\n    if (isAuthenticated && user) {\r\n      if (message.text === \"\") {\r\n        showMessage(\"You are already logged in, you need to log out before logging in as different account.\");\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isAuthenticated, error]);\r\n\r\n  const showMessage = (msg) => {\r\n    setMessage({ open: true, text: msg });\r\n\r\n    setTimeout(() => {\r\n      handleClose();\r\n    }, 4000)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setMessage({ open: false, text: \"\" });\r\n  };\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (username === \"\" || password === \"\") {\r\n      // setAlert(\"Please fill in all fields\");\r\n      showMessage(\"Please fill in all fields\");\r\n    } else {\r\n      const res = await login({\r\n        username,\r\n        password,\r\n      });\r\n      if (res.success) {\r\n       // showMessage(\"You have successfully logged in.\");\r\n        \r\n        showMessage(\"You have successfully logged in. You will be redirected to homepage.\");\r\n        setTimeout(() => history.push(\"/\"), 1300);\r\n      } else {\r\n        showMessage(\"Invalid Login Credentials\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label={formData.username === \"\" ? \"Username\" : \"\"}\r\n              value={formData.username}\r\n              onChange={handleInputChange}\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label={formData.password === \"\" ? \"Password\" : \"\"}\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link\r\n                  style={{ color: \"inherit\" }}\r\n                  to=\"/forgot-password\"\r\n                  variant=\"body2\"\r\n                >\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  style={{ color: \"inherit\" }}\r\n                  to=\"/sign-up\"\r\n                  variant=\"body2\"\r\n                >\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={message.open}\r\n            onClose={handleClose}\r\n            message={message.text}\r\n            key='login_toast'\r\n          />\r\n        </div>\r\n      </Container>\r\n    \r\n  );\r\n}\r\n","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Logout.jsx",["158"],"import React, { useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\n\r\nimport OnlineList from \"../components/OnlineList\";\r\nimport { ThemeContext } from \"../App\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Logout = () => {\r\n  const { user, logout } = useContext(AuthContext);\r\n  const socket = useContext(ThemeContext);\r\n\r\n  useEffect(() => {\r\n    if (user && socket) {\r\n      socket.emit(\"removeOnlineStatus\", { name: user.username });\r\n    }\r\n\r\n    logout();\r\n\r\n    // Reload data because Sidebar cause error if online list component is located in different pages\r\n    socket.emit('reloadOnlineUsers');\r\n    \r\n    // eslint-disable-next-line\r\n  }, [socket]);\r\n\r\n  return <Grid container style={{ margin: \"-2rem\" }}>\r\n    <Grid item lg={10} xs={12}>\r\n      <div style={{ margin: \"2rem\" }}>\r\n        {user ? (<h1>Logout</h1>) : (<h6>You have been logged out..</h6>)}\r\n      </div>\r\n    </Grid>\r\n    <Grid item lg={2} xs={12}>\r\n      \r\n    </Grid>\r\n  </Grid>;\r\n};\r\n\r\nexport default Logout;\r\n","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\SignUp.jsx",["159","160"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  TextField,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core/\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport OnlineListWrapper from \"../components/OnlineListWrapper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#004c9e\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    background: \"#004c9e\",\r\n    color: \"#fff\",\r\n    margin: theme.spacing(3, 0, 2),\r\n    \"&:hover\": {\r\n      background: \"#004c9edd\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignUp({ history }) {\r\n  const classes = useStyles();\r\n\r\n  // Use auth context\r\n  const authContext = useContext(AuthContext);\r\n  const {\r\n    loadUser,\r\n    register,\r\n    error,\r\n    isAuthenticated,\r\n  } = authContext;\r\n\r\n  // Init form data\r\n  const [formData, setFormData] = useState({\r\n    fullname: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // Get form data\r\n  const { fullname, username, password } = formData;\r\n\r\n  // Show toast\r\n  const [message, setMessage] = useState({ open: false, text: \"\" });\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n    if (isAuthenticated) {\r\n      if (message.text === \"\") {\r\n        showMessage(\"You are already logged in, you need to log out before registering for an account.\");\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isAuthenticated]);\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if(fullname===''||username===''||password==='')\r\n    { \r\n      showMessage(\"Please enter all fields\");\r\n    }\r\n    else{\r\n      const res = await register({\r\n        fullname,\r\n        username,\r\n        password,\r\n      });\r\n      \r\n      if (res.success) {\r\n        showMessage(\"You have been successfully registed.\\nYou will be automatically login!\");\r\n      } else {\r\n        showMessage(\"Invalid registration!\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  // Show toast\r\n  const showMessage = (msg) => {\r\n    setMessage({ open: true, text: msg });\r\n\r\n    setTimeout(() => {\r\n      handleClose();\r\n    }, 4000)\r\n  };\r\n\r\n  // Close toast\r\n  const handleClose = () => {\r\n    setMessage({ open: false, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    \r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"fullname\"\r\n                  name=\"fullname\"\r\n                  autoComplete=\"fullname\"\r\n                  label={formData.fullname === \"\" ? \"Fullname\" : \"\"}\r\n                  value={formData.fullname}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  label={formData.username === \"\" ? \"Username\" : \"\"}\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  label={formData.password === \"\" ? \"Password\" : \"\"}\r\n                  value={formData.password}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link style={{ color: \"inherit\" }} to=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n\r\n        </div>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          open={message.open}\r\n          onClose={handleClose}\r\n          message={message.text}\r\n          key='signup_toast'\r\n        />\r\n      </Container>\r\n    \r\n  );\r\n}\r\n","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\auth\\authContext.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\alert\\alertContext.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\auth\\AuthState.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\alert\\AlertState.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\auth\\authReducer.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\alert\\alertReducer.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\context\\types.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\utils\\setAuthToken.js",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\PlayGame.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomCreateModal.jsx",["161"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport VideogameAsset from \"@material-ui/icons/VideogameAsset\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ThemeContext } from \"../../App\";\r\nimport \"./css/styles.css\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#004c9e\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  inputField: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(3),\r\n    background: \"#004c9e\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: \"#004c9edd\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst RoomCreateModal = ({ close, onClick }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [name] = useState(user?.username ?? \"\");\r\n\r\n  const classes = useStyles();\r\n  const socket = useContext(ThemeContext);\r\n\r\n  const [formData, setFormData] = useState({\r\n    room: socket.id,\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    \r\n    if (e.target.name === \"numOfPlayers\") {\r\n      setFormData({ ...formData, [e.target.name]: parseInt(e.target.value) });\r\n      return;\r\n    }\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tictactoe-modal\">\r\n      <a href=\"#/\" className=\"close\" onClick={close}>\r\n        &times;\r\n      </a>\r\n      <div className=\"content\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VideogameAsset />\r\n          </Avatar>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            className={classes.inputField}\r\n          >\r\n            Create Room\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              disabled\r\n              variant=\"outlined\"\r\n              className={classes.inputField}\r\n              required\r\n              fullWidth\r\n              id=\"room\"\r\n              label=\"CODE\"\r\n              value={formData.room}\r\n              onChange={handleInputChange}\r\n              name=\"room\"\r\n              autoComplete=\"room\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              className={classes.inputField}\r\n              required\r\n              fullWidth\r\n              id=\"roomName\"\r\n              onChange={handleInputChange}\r\n              label=\"Name\"\r\n              name=\"roomName\"\r\n              autoComplete=\"roomName\"\r\n              autoFocus\r\n            />\r\n            <Grid container xs={3} sm item className={classes.inputField}>\r\n              <Grid item style={{ marginRight: \".75rem\" }} xs={6} alignItems = \"center\">\r\n                <Typography component=\"legend\">Number of players: </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  id=\"numOfPlayers\"\r\n                  name=\"numOfPlayers\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{ inputProps: { min: 3, max: 10} }}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n\r\n                const { room, roomName, numOfPlayers } = formData;\r\n                onClick(name, room, roomName, numOfPlayers);\r\n                close();\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCreateModal;\r\n","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomSearchHeader.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomListView.jsx",["162"],"import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  // Room card\r\n  cardItem: {\r\n    border: \"1px solid rgba(0,0,0,.05)\",\r\n    borderRadius: \".375rem\",\r\n    color: theme.palette.text.secondary,\r\n    textAlign: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  // Image\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  // Avatar\r\n  flexGrid: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(0.3),\r\n    },\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function RoomListView({ rooms }) {\r\n  const { user } = useContext(AuthContext);\r\n  const [username] = useState(user?.username ?? '');\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const goToRoom = (name, roomId, roomName, numOfPlayers) => {\r\n    const checkRoom = rooms.find((room)=>room.id===roomId);\r\n    if(checkRoom.numOfWaiting<checkRoom.numOfPlayers)\r\n    {\r\n      history.push(`/room?name=${name}&room=${roomId}&roomName=${roomName}&numOfPlayers=${numOfPlayers}`);\r\n    }\r\n    else{\r\n      alert(\"Room is full!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {rooms.filter((room) => room.status !== \"quickly\").map(({ id, numOfPlayers, name, host, status, numOfWaiting }) => (\r\n          <Grid item xs={4} key={uuid()}>\r\n            <Container spacing={3} className={classes.cardItem}>\r\n              <Grid item>\r\n                <ButtonBase\r\n                  focusRipple\r\n                  key={name}\r\n                  className={classes.image}\r\n                  focusVisibleClassName={classes.focusVisible}\r\n                  style={{\r\n                    width: \"100%\",\r\n                  }}\r\n                  onClick={() => {\r\n                    goToRoom(username, id, name, numOfPlayers)\r\n                  }}\r\n                >\r\n                  <span\r\n                    className={classes.imageSrc}\r\n                    style={{\r\n                      backgroundImage: \"url('https://imga.androidappsapk.co/-ysq_cTj3MZLWLl2dCLujV_QRk7AHow-BNFMjC9y652Z2hugmisPauuL86zTrJk3sUg=h300')\"\r\n                    }}\r\n                  />\r\n                  <span className={classes.imageBackdrop} />\r\n                  <span className={classes.imageButton}>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"subtitle1\"\r\n                      color=\"inherit\"\r\n                      className={classes.imageTitle}\r\n                    >\r\n                      Join room\r\n                      <span className={classes.imageMarked} />\r\n                    </Typography>\r\n                  </span>\r\n                </ButtonBase>\r\n              </Grid>\r\n              <Grid item style={{ marginTop: \"15px\" }}>\r\n                <Typography align=\"center\" gutterBottom variant=\"subtitle1\">\r\n                  {name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm container spacing={1} style={{ justifyContent: \"center\", alignItems: \"center\", marginTop: \"8px\" }}>\r\n                <Grid item>\r\n                  <Typography component=\"legend\">Number of players: </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>{numOfWaiting}/{numOfPlayers}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm container style={{ justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"12px\" }}>\r\n                {status === 'waiting'\r\n                  ? (<Grid item>\r\n                    <div className={classes.flexGrid}>\r\n                      <Tooltip title={host?.name || ''}>\r\n                        <Avatar alt=\"gamer 01\" src=\"\" ></Avatar>\r\n                      </Tooltip>\r\n                      <Typography variant=\"body2\">\r\n                        {host?.name}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>)\r\n                  : (<Grid item>\r\n                    <AvatarGroup max={4}>\r\n                      {[host].map(({ name }, i) => (\r\n                        <Tooltip title={name}>\r\n                          <Avatar key={i} alt=\"avatar\" src=\"\"></Avatar>\r\n                        </Tooltip>\r\n                      ))}\r\n                    </AvatarGroup>\r\n                  </Grid>)}\r\n                <Grid item>\r\n                  {status === 'waiting'\r\n                    ? (<Typography style={{ color: \"#ffb400\" }} variant=\"subtitle2\" gutterBottom>{status}</Typography>)\r\n                    : (<Typography style={{ color: \"limegreen\" }} variant=\"subtitle2\" gutterBottom>{status}</Typography>)\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\PlayGame\\RoomJoinModal.jsx",["163"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport VideogameAsset from \"@material-ui/icons/VideogameAsset\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./css/styles.css\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#004c9e\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  inputField: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(3),\r\n    background: \"#004c9e\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: \"#004c9edd\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst RoomJoinModal = ({ close, onClick }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [name] = useState(user?.username ?? '');\r\n\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = useState();\r\n\r\n  const handleInputChange = (e) => {\r\n    \r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return <div className=\"tictactoe-modal\">\r\n    <a href=\"#/\" className=\"close\" onClick={close}>\r\n      &times;\r\n    </a>\r\n    <div className=\"content\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <VideogameAsset />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\" className={classes.inputField}>\r\n          Join Room\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className={classes.inputField}\r\n            required\r\n            fullWidth\r\n            id=\"room\"\r\n            label=\"CODE\"\r\n            onChange={handleInputChange}\r\n            name=\"room\"\r\n            autoComplete=\"room\"\r\n            autoFocus\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              const { room } = formData;\r\n              onClick(room);\r\n              close();\r\n            }}\r\n          >\r\n            Join\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nexport default RoomJoinModal;","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Display\\Popups.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Alert.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\pages\\Room.jsx",["164","165"],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Chat\\Chat.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\InfoBar\\InfoBar.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Messages\\Messages.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Input\\Input.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\Chat\\Messages\\Message\\Message.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\index.jsx",[],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\SettingGame\\index.jsx",["166","167"],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\Controller\\index.jsx",["168"],"D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\ListPlayer\\index.jsx",["169","170","171","172","173"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ThemeContext } from \"../../../App\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport { yellow } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listPlayer: {},\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst ListPlayer = ({host,players}) => {\r\n  const classes = useStyles();\r\n  const socket = useContext(ThemeContext);\r\n  const play = players.filter((player)=>player.id !== host.id);\r\n  \r\n\r\n  const HomeIcon = (props) => {\r\n    return (\r\n      <SvgIcon {...props}>\r\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n      </SvgIcon>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={3}>\r\n          <Card variant=\"outlined\" className={classes.listPlayer}>\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography>Chủ phòng</Typography>\r\n              <Typography>{host.name}</Typography>\r\n              <Typography>Rank: {host.rank}</Typography>\r\n              <Button disabled>\r\n                <HomeIcon fontSize=\"large\" style={{ color: yellow[500] }} />\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        {players.filter(player=>player.id !== host.id).map((player) => (\r\n          <Grid item xs={3}>\r\n            <Card variant=\"outlined\" className={classes.listPlayer}>\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography>\r\n                  {host.id === player.id ? \"Chủ phòng\" : \"Người chơi\"}\r\n                </Typography>\r\n                <Typography>{player.name}</Typography>\r\n                <Typography>Rank: {player.rank}</Typography>\r\n                {(host.id === socket.id) ? (\r\n                  <Button>\r\n                    <CancelIcon fontSize=\"large\" color=\"secondary\"></CancelIcon>\r\n                  </Button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ListPlayer;\r\n","D:\\WEB\\REACT\\DATN\\werewolf-tensorflow-client\\src\\components\\WaitingRoom\\GameInfo\\index.jsx",["174","175","176","177"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ThemeContext } from \"../../../App\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#004c9e\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  inputField: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(3),\r\n    background: \"#004c9e\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: \"#004c9edd\",\r\n    },\r\n  },\r\n  cancel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst GameInfo = ({ roomSetting }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [name] = useState(user?.username ?? \"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"tictactoe-modal\">\r\n      <div className=\"content\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            className={classes.inputField}\r\n          >\r\n            Game Info\r\n          </Typography>\r\n\r\n          <Grid container>\r\n            <Grid xs={6} container alignItems=\"center\">\r\n              <Typography>Ma sói:</Typography>\r\n            </Grid>\r\n            <Grid xs={3}>\r\n              <Typography>{roomSetting.wereWolfs}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid xs={6} container alignItems=\"center\">\r\n              <Typography>Phù thủy:</Typography>\r\n            </Grid>\r\n            <Grid xs={6}>\r\n              <Checkbox\r\n                name=\"witch\"\r\n                defaultChecked={roomSetting.witch}\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid xs={6} container alignItems=\"center\">\r\n              <Typography>Thợ săn:</Typography>\r\n            </Grid>\r\n            <Grid xs={6}>\r\n              <Checkbox\r\n                name=\"hunter\"\r\n                defaultChecked={roomSetting.hunter}\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid xs={6} container alignItems=\"center\">\r\n              <Typography>Bảo vệ:</Typography>\r\n            </Grid>\r\n            <Grid xs={6}>\r\n              <Checkbox\r\n                name=\"guard\"\r\n                defaultChecked={roomSetting.guard}\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid xs={6} container alignItems=\"center\">\r\n              <Typography>Dân làng:</Typography>\r\n            </Grid>\r\n            <Grid xs={3}>\r\n              <Typography>{roomSetting.villagers}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameInfo;\r\n",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":21,"column":8,"nodeType":"184","messageId":"185","endLine":21,"endColumn":25},{"ruleId":"182","severity":1,"message":"186","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":19,"column":8,"nodeType":"184","messageId":"185","endLine":19,"endColumn":25},{"ruleId":"182","severity":1,"message":"187","line":54,"column":5,"nodeType":"184","messageId":"185","endLine":54,"endColumn":10},{"ruleId":"182","severity":1,"message":"188","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":13},{"ruleId":"182","severity":1,"message":"189","line":14,"column":8,"nodeType":"184","messageId":"185","endLine":14,"endColumn":14},{"ruleId":"182","severity":1,"message":"190","line":43,"column":10,"nodeType":"184","messageId":"185","endLine":43,"endColumn":14},{"ruleId":"182","severity":1,"message":"191","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":19},{"ruleId":"182","severity":1,"message":"190","line":46,"column":13,"nodeType":"184","messageId":"185","endLine":46,"endColumn":17},{"ruleId":"182","severity":1,"message":"190","line":48,"column":10,"nodeType":"184","messageId":"185","endLine":48,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":63,"column":7,"nodeType":"194","endLine":63,"endColumn":44},{"ruleId":"182","severity":1,"message":"195","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"195","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"196","line":1,"column":39,"nodeType":"184","messageId":"185","endLine":1,"endColumn":48},{"ruleId":"182","severity":1,"message":"197","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":14},{"ruleId":"182","severity":1,"message":"198","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":12},{"ruleId":"182","severity":1,"message":"199","line":30,"column":9,"nodeType":"184","messageId":"185","endLine":30,"endColumn":13},{"ruleId":"182","severity":1,"message":"200","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":9},{"ruleId":"182","severity":1,"message":"198","line":9,"column":3,"nodeType":"184","messageId":"185","endLine":9,"endColumn":12},{"ruleId":"182","severity":1,"message":"201","line":14,"column":10,"nodeType":"184","messageId":"185","endLine":14,"endColumn":22},{"ruleId":"182","severity":1,"message":"190","line":47,"column":10,"nodeType":"184","messageId":"185","endLine":47,"endColumn":14},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'OnlineListWrapper' is defined but never used.","Identifier","unusedVar","'OnlineList' is defined but never used.","'error' is assigned a value but never used.","'Input' is defined but never used.","'Rating' is defined but never used.","'name' is assigned a value but never used.","'WaitingRoom' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'play' is assigned a value but never used.","'Button' is defined but never used.","'ThemeContext' is defined but never used.","no-global-assign","no-unsafe-negation"]